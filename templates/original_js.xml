<templateSet group="original_js">
  <template name="imm" value="(()=&gt;{&#10;&#10;})();&#10;$END$" description="immediate function（即時関数）" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="eve-domc" value="window.addEventListener('DOMContentLoaded',function ($argument$) {&#10;    $END$&#10;},false);&#10;" description="&quot;DOMContentLoaded&quot;" toReformat="false" toShortenFQNames="true">
    <variable name="argument" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="new_class" value="class $class$ {&#10;    constructor($argument$){};&#10;};&#10;&#10;let $var$ = new $class$($argument$);&#10;$END$" description="constructor(静的メソッドを入れるときは「static」)" toReformat="false" toShortenFQNames="true">
    <variable name="argument" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="class" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="switch" value="switch($obj$){&#10;    case $value$:&#10;    $function$&#10;    break;&#10;}&#10;$END$" description="swich文" toReformat="false" toShortenFQNames="true">
    <variable name="obj" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="new_class_ext" value="class $addClass$ extends $originalClass$ {&#10;    constructor($argument$){&#10;    super($argument$);&#10;    };&#10;    $function$(){&#10;    super.$function$();&#10;    }&#10;};&#10;&#10;let $var$ = new $addClass$($argument$);&#10;$END$" description="class継承" toReformat="false" toShortenFQNames="true">
    <variable name="addClass" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="originalClass" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="argument" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="eve-load" value="window.addEventListener('load',function ($argument$) {&#10;    $END$&#10;},false);" description="loadイベント" toReformat="false" toShortenFQNames="true">
    <variable name="argument" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="eve-click" value="$el$.addEventListener('click',function ($argument$event) {&#10;    (event.preventDefault) ? event.preventDefault():event.returnValue=false;&#10;    $END$&#10;},false);" description="clickイベント" toReformat="false" toShortenFQNames="true">
    <variable name="el" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="argument" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="eve-scroll" value="window.addEventListener('scroll',function ($argument$) {&#10;    $END$&#10;},false);" description="scroii イベント" toReformat="false" toShortenFQNames="true">
    <variable name="argument" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>